#!/usr/bin/env python

"""\
Usage:

$ source ./read_jira_credentials
$ ./next_issue
"""

from json.decoder import JSONDecodeError
import os
import sys

import requests


process_name = sys.argv[0]


def error_out(message):
    print('{}: {}'.format(process_name, message))
    exit(1)


def help_message(env):
    print('Missing ${env}'.format(env=env))
    error_out(__doc__)


url = 'https://sighten.atlassian.net/rest/api/2/search?'

JIRA_USER = os.environ.get('JIRA_USER')
if JIRA_USER is None:
    help_message('JIRA_USER')

JQL = """
assignee = {JIRA_USER}
AND status in ("In Development", "Ready For Development")
AND issuetype != epic and sprint in opensprints()
ORDER BY status, Sprint
"""

authorization = os.environ.get('JIRA_AUTH')
if authorization is None:
    help_message('JIRA_AUTH')

response = requests.get(
    url,
    params={'jql': JQL.format(JIRA_USER=JIRA_USER), 'maxResults': 1},
    headers={'Authorization': authorization}
)

if response.status_code == 400:
    error_out('inactive account')

if response.status_code == 401:
    error_out('bad password')

try:
    print(response.json()['issues'][0]['key'].lower())
except JSONDecodeError:
    print('{}: Bad auth'.format(process_name))
    exit(1)
